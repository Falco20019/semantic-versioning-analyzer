name: Build and Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'resources/**/*'
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger:"junit;LogFileName=test-results.xml"
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results
        path: '**/*/test-results.xml'

    - name: Create local manifest file
      run: dotnet new tool-manifest
    - name: Install analyzer
      run: dotnet tool install --add-source source/SemVerAnalyzer/bin/Release SemVerAnalyzer
    - name: Analyze semantic version
      run: dotnet analyze-semver -a source/SemVerAnalyzer/bin/Release/netcoreapp3.1/SemVerAnalyzer.dll -o semver-report.md -c source/SemVerAnalyzer/config.json
  test-results:
    runs-on: ubuntu-latest
    needs: build
    if: success() || failure()
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: '**/*/test-results.xml'
  test-badge:
    needs: test-results
    runs-on: ubuntu-latest
    steps:
    - name: Extract Branch Name
      run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Fetch badge
      run: |
        TEST_RESULTS_FILE=`find . -name test-results.xml | head -1`
        TEST_COUNT=`grep -Pio '(?<=tests=")\d+' "${TEST_RESULTS_FILE}" | head -1`
        FAIL_COUNT=`grep -Pio '(?<=failures=")\d+' "${TEST_RESULTS_FILE}" | head -1`
        PASS_COUNT=$((TEST_COUNT - $FAIL_COUNT))
        if [[ $FAIL_COUNT -eq 0 ]]; then BUILD_STATUS=success; else BUILD_STATUS=critical; fi
        BADGE_URL="https://img.shields.io/static/v1?label=tests&message=${PASS_COUNT}%20passing%20|%20${FAIL_COUNT}%20failing&color=${BUILD_STATUS}"

        curl $BADGE_URL --output ./resources/test-results.svg
    - name: Commit badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Add changes" -F ./resources/test-results.svg
    - name: Push changes
      if: env.BRANCH == 'main'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
